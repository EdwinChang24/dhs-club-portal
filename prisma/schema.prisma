// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Club {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  name          String        @unique
  description   String
  meetings      MeetingInfo[]
  approvedFor   DateTime
  advisor       Teacher       @relation("AdvisorClubs", fields: [advisorId], references: [id])
  founder       Student       @relation("FoundedClubs", fields: [founderId], references: [id])
  president     Student[]     @relation("PresidentClubs", fields: [presidentId], references: [id])
  vicePresident Student[]     @relation("VicePresidentClubs", fields: [vicePresidentId], references: [id])
  otherOfficers Student[]     @relation("OfficerClubs", fields: [otherOfficerIds], references: [id])
  members       Student[]     @relation("MemberClubs", fields: [memberIds], references: [id])

  // This stuff shouldn't need to be touched (unless you changed the schema and now there's an error)
  advisorId       String   @db.ObjectId
  founderId       String   @db.ObjectId
  presidentId     String[] @db.ObjectId
  vicePresidentId String[] @db.ObjectId
  otherOfficerIds String[] @db.ObjectId
  memberIds       String[] @db.ObjectId
}

type MeetingInfo {
  location String
  time     DateTime
}

model Student {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  name                 String
  email                String   @unique
  graduation           DateTime
  foundedClubs         Club[]   @relation("FoundedClubs")
  presidentInClubs     Club[]   @relation("PresidentClubs", fields: [presidentInClubsIds], references: [id])
  vicePresidentInClubs Club[]   @relation("VicePresidentClubs", fields: [vicePresidentInClubsId], references: [id])
  officerInClubs       Club[]   @relation("OfficerClubs", fields: [officerInClubIds], references: [id])
  memberInClubs        Club[]   @relation("MemberClubs", fields: [memberInClubIds], references: [id])

  presidentInClubsIds    String[] @db.ObjectId
  vicePresidentInClubsId String[] @db.ObjectId
  officerInClubIds       String[] @db.ObjectId
  memberInClubIds        String[] @db.ObjectId
}

model Teacher {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String
  email          String   @unique
  advisorOfClubs Club[]   @relation("AdvisorClubs")
}
